[metadata]
name = clldutils
version = 3.20.0
license = Apache 2.0
license_files = LICENSE
author = Robert Forkel
author_email = dlce.rdm@eva.mpg.de
description = Utilities for programmatic data curation
long_description = file: README.md
long_description_content_type = text/markdown
keywords =
url = https://github.com/clld/clldutils
project_urls =
    Bug Tracker = https://github.com/clld/clldutils/issues
classifiers =
    Development Status :: 5 - Production/Stable
    Intended Audience :: Developers
    Intended Audience :: Science/Research
    Natural Language :: English
    Operating System :: OS Independent
    Programming Language :: Python :: 3
    Programming Language :: Python :: 3.8
    Programming Language :: Python :: 3.9
    Programming Language :: Python :: 3.10
    Programming Language :: Python :: 3.11
    Programming Language :: Python :: Implementation :: CPython
    Programming Language :: Python :: Implementation :: PyPy
    License :: OSI Approved :: Apache Software License

[options]
zip_safe = False
packages = find:
package_dir =
    = src
python_requires = >=3.8
install_requires =
    python-dateutil
    tabulate>=0.7.7
    colorlog
    attrs>=18.1.0
    pylatexenc
    markdown
    lxml
    markupsafe

include_package_data = True

[options.packages.find]
where = src

[options.extras_require]
dev =
    flake8
    wheel
    build
    twine
test =
    pytest >= 5
    pytest-mock
    pytest-cov
    tox
docs =
    sphinx<7
    sphinx-autodoc-typehints
    sphinx-rtd-theme

[easy_install]
zip_ok = false

[bdist_wheel]
universal = 1

[flake8]
ignore = E711,E712,D100,D101,D103,D102,D301
max-line-length = 100
exclude = .tox

[tool:pytest]
minversion = 5
testpaths = tests
addopts =
    --cov

[coverage:run]
source =
    clldutils
    tests

[coverage:report]
exclude_lines =
    if self.debug:
    pragma: no cover
    raise NotImplementedError
    if __name__ == .__main__.:
ignore_errors = True
show_missing = true
skip_covered = True

[tox:tox]
envlist = py38, py39, py310, py311
isolated_build = true
skip_missing_interpreter = true

[testenv]
deps = .[test]
commands = pytest {posargs}
